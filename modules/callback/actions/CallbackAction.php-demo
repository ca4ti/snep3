<?php
/**
 * Efetua callback para o numero de origem da ligação e direciona para uma
 * extensão nova para ser processada novamente pelo Snep. Nada adicionado após
 * essa ação é executado.
 *
 * @see PBX_Rule
 * @see PBX_Rule_Action
 *
 * @category  Snep
 * @package   PBX_Rule_Action
 * @copyright Copyright (c) 2009 OpenS Tecnologia
 * @author    Henrique Grolli Bassotto
 */
class CallbackAction extends PBX_Rule_Action {

    /**
     * @var Internacionalization
     */
    private $i18n;

    /**
     * Constructor
     * @param
     */
    public function __construct() {
          $this->i18n = Zend_Registry::get("i18n");
    }

    /**
     * Retorna o nome da Ação. Geralmente o nome da classe.
     * @return Nome da Ação
     */
    public function getName() {
        return $this->i18n->translate("Callback");
    }

    /**
     * Retorna o numero da versão da classe.
     * @return Versão da classe
     */
    public function getVersion() {
        return SNEP_VERSION;
    }

    /**
     * Retorna uma breve descrição de funcionamento da ação.
     * @return Descrição de funcionamento ou objetivo
     */
    public function getDesc() {
        return $this->i18n->translate("Make a Callback to the caller number.");
    }

    public function getDemo(){
      $message = '<font size=6><b>Become an Official Partner to have access to this feature!</b></font>' . "<br><br>" .
      '<font size=4>To have access to this feature you need turn on an Offical Partner.<br>
      To known more about: <a href="http://www.opens.com.br/parceiros" target=_blank>Here</a></font>';
      return  array("status" => "demo", "message" => $message);
    }
    /**
     * Devolve um XML com as configurações requeridas pela ação
     * @return String XML
     */
    public function getConfig() {
      return <<<XML
<params>
</params>
XML;
    }

    /**
     * Devolve um XML com as configurações padrão da ação
     * @return String XML
     */
    public function getDefaultConfigXML() {
        $callback_delay  = (isset($this->defaultConfig['callback_delay'])) ? $this->defaultConfig['callback_delay'] : 5;
        $callback_delay  = "<value>$callback_delay</value>";

        return <<<XML
<params>
    <int>
        <id>callback_delay</id>
        <label>Atraso para Retorno da Ligação</label>
        <unit>segundos</unit>
        <size>2</size>
        $callback_delay
    </int>
</params>
XML;
    }

    /**
     * Executa a ação.
     * @param Asterisk_AGI $asterisk
     * @param PBX_Asterisk_AGI_Request $request
     */
    public function execute($asterisk, $request) {

    }
}
